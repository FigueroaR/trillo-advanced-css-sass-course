.container {
  max-width: 120rem;
  margin: 8rem auto;
  background-color: var(--color-grey-light-1);
  box-shadow: --shadow-dark; // look at base for infor
  min-height: 50rem;

  @media only screen and (max-width: $bp-large) {
    margin: 0;
    max-width: 100%;
    width: 100%;
  }
}

.header{
  font-size: 1.4rem;
  height: 7rem;
  background-color: #fff; // means white
  //border-bottom: 1px solid var(--color-grey-light-2); // width type color
  border-bottom: var(--line); // check _base.scss for variable, same as line above

  display: flex; // we set the flex for the children to behave how we want it
  justify-content: space-between; // this equally divied the space between the children of this parent element, pushes all off them to an extreme of side
  align-items: center; // we ake the item cenetered on their x or y coordinate
}

.content {
  display: flex; // here we start flex property, and it makes its vhildren elements into boxes, and we will have our 
  // .sidebar and and .hotel-view properties side by side (this 'content' is the parent)

  @media only screen and (max-width: $bp-medium) {
    flex-direction: column;
  }
}

.sidebar {
  background-color: var(--color-grey-dark-1);
  flex: 0 0 16%; //no growth if there is space, no shrink if there is no enough space, and basis alyways at 18%
  color: #fff;
  display: flex; //makes it into a flex container
  flex-direction: column; //top to bottom or cross axis (y axis)
  justify-content: space-between; // creates space between and spread items to extreme ends, good in this case 
}

.hotel-view {
  background-color: #fff; // means white

  //testing
  //height: 80rem;

  flex: 1; // so here we allow this element to grow as much as it can (full up its parent, so this comes after the side bar)
} 

.detail {
  font-size: 1.4rem;
  display: flex; //its children will be side by side
  padding: 4.5rem;
  background-color: var(--color-grey-light-2);
  border-bottom: var(--line);

  @media only screen and (max-width: $bp-medium) {
    padding: 3rem;
  }
  
}

.description {
  // children inherit font-size
  background-color:  #fff;
  box-shadow: var(--shadow-light);
  padding: 3rem;
  flex: 0 0 60%; // grow shrink occupancy
  margin-right: 4.5rem;

  @media only screen and (max-width: $bp-medium) {
    padding: 2rem;
    margin-right: 3rem;
  }
  
}

.user-reviews {
  // children inherit font-size

  //background-color: blue; // for testing purposes
  flex: 1; //we occupy the rest of the space within the parent 40% about
  display: flex; // side by side
  // but 
  flex-direction: column; // so it gets fixed
  align-items: center;
}