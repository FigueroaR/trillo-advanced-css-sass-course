//////////////////////////////////////////////////
// LOGO
.logo {
  height: 3.25rem;
  margin-left: 2rem;
}


///////////// 
//Search 
.search {
  flex: 0 0 40%; // enlarge shrink and ocupancy

  //nested flex box
  display: flex;
  align-items: center; //cross axis
  justify-content: center; //main axis

  &__input {
    font-family: inherit; //inputs dont automatically inherit from the global font font-family, so we have to specify to do so
    font-size: inherit;
    color: inherit;
    background-color: var(--color-grey-light-2);
    border: none;
    padding: .7rem 2rem;
    border-radius: 100px;
    width: 90%;
    transition: all .2s; // this transitions refers to the (all in general but in this case) focus

    margin-right: -3.25rem;

    &:focus {
      // here we will enlarge our input when we click to start writing on the input
      outline: none;
      width: 100%;
      background-color: var(--color-grey-light-3);
    }

    &::-webkit-input-placeholder {
      font-weight: 100;
      color: var(--color-grey-light-4);
    }
  }

  //select adjacent of button, they are siblings, have the same parent element, so when we click on input and focus, we can also pick something else to happen to an element
  &__input:focus + &__button {
    background-color: var(--color-grey-light-3);
  }

  &__button {
    border: none;
    background-color: var(--color-grey-light-2);

    // personal test shows so far 
    &:focus {
      outline: none;
    }

    &:active {
      transform: translateY(2px);
    }
  }

  &__icon {
    height: 2rem ;
    width: 2rem;
    fill: var(--color-grey-dark-3);
  }

}



/////////////////////////////////////////////////////////////
//USER MAVIGATTION

.user-nav {
  align-self: stretch; // strech overwritye the parent and makes its hover expand the entire heigh or its allow space (parent permit)

  //we nest our flex here (flex item becomace a flex parent also and has children)
  display: flex; // this will help us keep track of the children, better orginization, naturally is will display in out main axis
  align-items: center; //this will align item on our cross axis (y axis)

  // user nav and all direct children
  & > * {
    // padding creates space between user nav (saved chat and user pic)
    padding: 0 2rem; //top/bottom  left/right
    cursor: pointer;
    height: 100%; // this works in conjuction with align-self: stretch;
    display: flex;
    align-items: center; //aligns in cross axis(y axis) // 3rd level of containers
  }

  // user nav and all direct children but on hover
  & > *:hover {
    background-color: var(--color-grey-light-2);
  }


  &__icon-box {
    position: relative;
  }

  &__icon {
    height: 2.5rem ;
    width: 2.5rem;
    fill: var(--color-grey-dark-2);
    
  }

  &__notification {
    font-size: .8rem;
    height: 1.75rem;
    width: 1.75rem;
    border-radius:100px;
    // border-radius: 50%; // old brosers might look funny with this / mine works fine
    background-color: var(--color-primary);
    color: #fff;
    position: absolute; // its parent (icon, but we have to use icon-box/parent of icon because icon is an svg) has a position of relative, in order for us to move this children to its formal position
    top: 1.5rem ;
    right: 1.1rem;

    //  user flexbox to work with elements inside our span/text 4th level of flex
    display: flex;
    justify-content: center; //main axis (x)
    align-items: center; //cross axis (y)

  }

  // &__user {

  // }

  &__user-photo {
    height: 3.75rem;
    border-radius: 50%;
    margin-right: 1.1rem; // some space between the pic and name
  }

  // &__user-name {
    //nothing here 
  // }

}




//////////////////////////////////////////////////////////////////////////////
// SIDE NAVIGATION


.side-nav {
  font-size: 1.4rem;
  list-style: none; // take the dots out of the li
  margin-top: 3.5rem;

  &__item {
    position: relative; // for children positioning 


    // everything exept
    &:not(:last-child) {
      margin-bottom: .5rem;
    }

  }

  &__item::before {
    content: "";
    position: absolute;  //absolute position / parent is &__item // this is postion in relation (relative) to its parent
    top: 0;
    left: 0;
    height: 100%;
    width: 3px;
    background-color: var(--color-primary);  
    transform: scaleY(0); // we hide it before hand
    transition: transform .2s,
                width .4s cubic-bezier(.79,.29,.34,1.33) .2s,; // for with .4s but after a .2s delay// https://cubic-bezier.com/#.79,.29,.34,1.33
                background-color: .1s; //background-color gets animated
  }

  // ::here we make the &__item::before ^^^ only work/appear when we hover
  &__item:hover::before,
  &__item--active::before {
    transform: scaleY(1); // on hover it shows, it starts in the middle and starts growing in the y direction
    width: 100%;
  }

  &__item:active::before {
    background-color: var(--color-primary-light);

  }

  // :link & :visited pseudo classes
  &__link:link, 
  &__link:visited {
    color: var(--color-grey-light-1);
    text-decoration: none; //takes away the line below text
    text-transform: uppercase; // capital letters 
    display: block;
    padding: 1.5rem 3rem;

    position: relative; // z index only works if we have a specified position
    z-index: 10;

    // we canter our svg/icons and text with these 2 lines of code
    display: flex;
    align-items: center;
  }

  &__icon {
    width: 1.75rem;
    height: 1.75rem;
    margin-right: 2rem;
    fill: currentColor; // color of the current element or parent // var(--color-grey-light-1);
  }


}



///////////////////////////////////////////////////////
/// LEGAL TEXT 

.legal {
  color: var(--color-grey-light-2);
  font-size: 1.2rem;
  text-align: center;
  padding: 2.5rem;
}




///////////////////////////////////////////////////////
/// GALLERY

.gallery {

  display: flex;

  &__photo {
    width: 100%;
    display: block;

  }

}




///////////////////////////////////////////////////////
/// OVERVIEW


.overview {
  display: flex;
  
  &__heading {

  }

  &__stars {
    //flex: 1; // we are telling the stars to occupy all the space it can, giving us a cool visiaul by seprating the rest of the item to its right at the end, but it is not ideal, so we use margin-right: auto;
    margin-right: auto;
  }


  &__icon-star, &__icon-location {
    width: 1.75rem;
    height: 1.75rem;
    fill: var(--color-primary);
  }

  &__location {
    
  }

  &__rating {

  }

  &__rating-average {

  }

  &__rating-count {

  }
}